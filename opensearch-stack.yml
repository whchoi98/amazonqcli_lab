AWSTemplateFormatVersion: "2010-09-09"
Description: "OpenSearch Cluster in DMZVPC Private Subnets"

Parameters:
  DMZVPCStackName:
    Type: String
    Default: "DMZVPC"
    Description: "Name of the DMZVPC CloudFormation stack"

  OpenSearchDomainName:
    Type: String
    Default: "dmzvpc-opensearch"
    Description: "OpenSearch domain name"
    AllowedPattern: "[a-z][a-z0-9\\-]+"
    MinLength: 3
    MaxLength: 28

  OpenSearchVersion:
    Type: String
    Default: "OpenSearch_2.11"
    Description: "OpenSearch engine version"
    AllowedValues:
      - "OpenSearch_2.11"
      - "OpenSearch_2.9"
      - "OpenSearch_2.7"
      - "OpenSearch_2.5"

  InstanceType:
    Type: String
    Default: "r5.large.elasticsearch"
    Description: "OpenSearch instance type"
    AllowedValues:
      - "t2.micro.elasticsearch"
      - "t2.small.elasticsearch"
      - "t2.medium.elasticsearch"
      - "t3.small.elasticsearch"
      - "t3.medium.elasticsearch"
      - "m5.large.elasticsearch"
      - "m5.xlarge.elasticsearch"
      - "m6g.large.elasticsearch"
      - "m6g.xlarge.elasticsearch"
      - "c5.large.elasticsearch"
      - "c5.xlarge.elasticsearch"
      - "r5.large.elasticsearch"
      - "r5.xlarge.elasticsearch"

  InstanceCount:
    Type: Number
    Default: 2
    MinValue: 1
    MaxValue: 6
    Description: "Number of OpenSearch instances"

  VolumeSize:
    Type: Number
    Default: 20
    MinValue: 10
    MaxValue: 100
    Description: "EBS volume size per instance (GB)"

  MasterUsername:
    Type: String
    Default: "admin"
    Description: "Master username for OpenSearch"
    MinLength: 1
    MaxLength: 16

  MasterPassword:
    Type: String
    NoEcho: true
    Description: "Master password for OpenSearch (8+ characters)"
    MinLength: 8
    MaxLength: 128

Resources:
  # OpenSearch Security Group
  OpenSearchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for OpenSearch cluster
      GroupName: !Sub "${AWS::StackName}-OpenSearchSecurityGroup"
      VpcId: 
        Fn::ImportValue: "DMZVPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 
            Fn::ImportValue: "DMZVPC-CIDR"
          Description: "Allow HTTPS access from VPC"
        - IpProtocol: tcp
          FromPort: 9200
          ToPort: 9200
          CidrIp: 
            Fn::ImportValue: "DMZVPC-CIDR"
          Description: "Allow OpenSearch API access from VPC"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-OpenSearchSecurityGroup"

  # OpenSearch Service Linked Role (if not exists)
  OpenSearchServiceRole:
    Type: AWS::IAM::ServiceLinkedRole
    Properties:
      AWSServiceName: es.amazonaws.com
      Description: "Service linked role for OpenSearch/Elasticsearch"

  # OpenSearch Domain (using Elasticsearch resource type for compatibility)
  OpenSearchDomain:
    Type: AWS::Elasticsearch::Domain
    Properties:
      DomainName: !Ref OpenSearchDomainName
      ElasticsearchVersion: "OpenSearch_2.11"
      
      ElasticsearchClusterConfig:
        InstanceType: !Ref InstanceType
        InstanceCount: !Ref InstanceCount
        DedicatedMasterEnabled: false
        ZoneAwarenessEnabled: true
        ZoneAwarenessConfig:
          AvailabilityZoneCount: 2
      
      EBSOptions:
        EBSEnabled: true
        VolumeType: gp3
        VolumeSize: !Ref VolumeSize
        Iops: 3000
      
      VPCOptions:
        SecurityGroupIds:
          - !Ref OpenSearchSecurityGroup
        SubnetIds:
          - Fn::ImportValue: "DMZVPC-Private-Subnet-A"
          - Fn::ImportValue: "DMZVPC-Private-Subnet-B"
      
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: !Ref MasterUsername
          MasterUserPassword: !Ref MasterPassword
      
      NodeToNodeEncryptionOptions:
        Enabled: true
      
      EncryptionAtRestOptions:
        Enabled: true
      
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: "Policy-Min-TLS-1-2-2019-07"
      
      AccessPolicies:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "es:*"
            Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${OpenSearchDomainName}/*"
      
      LogPublishingOptions:
        INDEX_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt OpenSearchLogGroup.Arn
          Enabled: true
        SEARCH_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt OpenSearchLogGroup.Arn
          Enabled: true
        ES_APPLICATION_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt OpenSearchLogGroup.Arn
          Enabled: true
      
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-opensearch-domain"
        - Key: Environment
          Value: "private-subnet"

  # CloudWatch Log Group for OpenSearch
  OpenSearchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/opensearch/domains/${OpenSearchDomainName}"
      RetentionInDays: 7

  # CloudWatch Log Resource Policy
  OpenSearchLogResourcePolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-opensearch-log-policy"
      PolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "es.amazonaws.com"
              },
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream"
              ],
              "Resource": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/opensearch/domains/${OpenSearchDomainName}*"
            }
          ]
        }

Outputs:
  OpenSearchDomainEndpoint:
    Description: "OpenSearch domain endpoint"
    Value: !GetAtt OpenSearchDomain.DomainEndpoint
    Export:
      Name: !Sub "${AWS::StackName}-DomainEndpoint"

  OpenSearchDashboardsURL:
    Description: "OpenSearch Dashboards URL"
    Value: !Sub "https://${OpenSearchDomain.DomainEndpoint}/_dashboards/"
    Export:
      Name: !Sub "${AWS::StackName}-DashboardsURL"

  OpenSearchDomainArn:
    Description: "OpenSearch domain ARN"
    Value: !GetAtt OpenSearchDomain.DomainArn
    Export:
      Name: !Sub "${AWS::StackName}-DomainArn"

  OpenSearchSecurityGroupId:
    Description: "OpenSearch security group ID"
    Value: !Ref OpenSearchSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroupId"

  OpenSearchDomainName:
    Description: "OpenSearch domain name"
    Value: !Ref OpenSearchDomainName
    Export:
      Name: !Sub "${AWS::StackName}-DomainName"
